name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with pre-commit
      run: |
        SKIP=pydocstyle pre-commit run --all-files
      continue-on-error: true  # Don't fail the build for now

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-xdist hypothesis mypy black isort flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Test with pytest
      run: |
        mkdir -p logs data
        # Run property-based tests (original CI scope)
        pytest tests/test_property_based.py -v --cov=. --cov-report=xml

        # Run isolated tests (new comprehensive test infrastructure)
        pytest tests/test_main_isolated.py tests/test_detector_isolated.py -v --cov=. --cov-append --cov-report=xml

        # Run persistent service tests
        pytest tests/test_persistent_service.py -v --cov=. --cov-append --cov-report=xml

        # Run integration tests (if they pass)
        pytest tests/integration/ -v --cov=. --cov-append --cov-report=xml || echo "Integration tests failed, continuing..."
      env:
        # Use dummy credentials for testing
        FOGIS_USERNAME: test_user
        FOGIS_PASSWORD: test_pass

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  docs:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the build for now
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build documentation
      run: |
        cd docs && make html || echo "Documentation build failed but continuing anyway"
      continue-on-error: true  # Don't fail the build for now

    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/build/html/
